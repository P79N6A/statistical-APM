<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="indiv.dev.grad.hit.pro.mapper.CrawlDataMapper">
  <resultMap id="BaseResultMap" type="indiv.dev.grad.hit.pro.pojo.CrawlData">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="entity" jdbcType="VARCHAR" property="entity" />
    <result column="theme" jdbcType="VARCHAR" property="theme" />
    <result column="features" jdbcType="VARCHAR" property="features" />
    <result column="urls" jdbcType="VARCHAR" property="urls" />
    <result column="tsql" jdbcType="VARCHAR" property="tsql" />
    <result column="users" jdbcType="VARCHAR" property="users" />
    <result column="is_finished" jdbcType="BIT" property="isFinished" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="extra" jdbcType="VARCHAR" property="extra" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, entity, theme, features, urls, tsql, users, is_finished, update_time, extra
  </sql>
  <select id="selectByExample" parameterType="indiv.dev.grad.hit.pro.example.CrawlDataExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from crawl_data
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from crawl_data
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from crawl_data
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="indiv.dev.grad.hit.pro.example.CrawlDataExample">
    delete from crawl_data
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="indiv.dev.grad.hit.pro.pojo.CrawlData">
    insert into crawl_data (id, entity, theme, 
      features, urls, tsql, 
      users, is_finished, update_time, 
      extra)
    values (#{id,jdbcType=INTEGER}, #{entity,jdbcType=VARCHAR}, #{theme,jdbcType=VARCHAR}, 
      #{features,jdbcType=VARCHAR}, #{urls,jdbcType=VARCHAR}, #{tsql,jdbcType=VARCHAR}, 
      #{users,jdbcType=VARCHAR}, #{isFinished,jdbcType=BIT}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{extra,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="indiv.dev.grad.hit.pro.pojo.CrawlData">
    insert into crawl_data
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="entity != null">
        entity,
      </if>
      <if test="theme != null">
        theme,
      </if>
      <if test="features != null">
        features,
      </if>
      <if test="urls != null">
        urls,
      </if>
      <if test="tsql != null">
        tsql,
      </if>
      <if test="users != null">
        users,
      </if>
      <if test="isFinished != null">
        is_finished,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="extra != null">
        extra,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="entity != null">
        #{entity,jdbcType=VARCHAR},
      </if>
      <if test="theme != null">
        #{theme,jdbcType=VARCHAR},
      </if>
      <if test="features != null">
        #{features,jdbcType=VARCHAR},
      </if>
      <if test="urls != null">
        #{urls,jdbcType=VARCHAR},
      </if>
      <if test="tsql != null">
        #{tsql,jdbcType=VARCHAR},
      </if>
      <if test="users != null">
        #{users,jdbcType=VARCHAR},
      </if>
      <if test="isFinished != null">
        #{isFinished,jdbcType=BIT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="extra != null">
        #{extra,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="indiv.dev.grad.hit.pro.example.CrawlDataExample" resultType="java.lang.Integer">
    select count(*) from crawl_data
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update crawl_data
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.entity != null">
        entity = #{record.entity,jdbcType=VARCHAR},
      </if>
      <if test="record.theme != null">
        theme = #{record.theme,jdbcType=VARCHAR},
      </if>
      <if test="record.features != null">
        features = #{record.features,jdbcType=VARCHAR},
      </if>
      <if test="record.urls != null">
        urls = #{record.urls,jdbcType=VARCHAR},
      </if>
      <if test="record.tsql != null">
        tsql = #{record.tsql,jdbcType=VARCHAR},
      </if>
      <if test="record.users != null">
        users = #{record.users,jdbcType=VARCHAR},
      </if>
      <if test="record.isFinished != null">
        is_finished = #{record.isFinished,jdbcType=BIT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.extra != null">
        extra = #{record.extra,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update crawl_data
    set id = #{record.id,jdbcType=INTEGER},
      entity = #{record.entity,jdbcType=VARCHAR},
      theme = #{record.theme,jdbcType=VARCHAR},
      features = #{record.features,jdbcType=VARCHAR},
      urls = #{record.urls,jdbcType=VARCHAR},
      tsql = #{record.tsql,jdbcType=VARCHAR},
      users = #{record.users,jdbcType=VARCHAR},
      is_finished = #{record.isFinished,jdbcType=BIT},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      extra = #{record.extra,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="indiv.dev.grad.hit.pro.pojo.CrawlData">
    update crawl_data
    <set>
      <if test="entity != null">
        entity = #{entity,jdbcType=VARCHAR},
      </if>
      <if test="theme != null">
        theme = #{theme,jdbcType=VARCHAR},
      </if>
      <if test="features != null">
        features = #{features,jdbcType=VARCHAR},
      </if>
      <if test="urls != null">
        urls = #{urls,jdbcType=VARCHAR},
      </if>
      <if test="tsql != null">
        tsql = #{tsql,jdbcType=VARCHAR},
      </if>
      <if test="users != null">
        users = #{users,jdbcType=VARCHAR},
      </if>
      <if test="isFinished != null">
        is_finished = #{isFinished,jdbcType=BIT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="extra != null">
        extra = #{extra,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="indiv.dev.grad.hit.pro.pojo.CrawlData">
    update crawl_data
    set entity = #{entity,jdbcType=VARCHAR},
      theme = #{theme,jdbcType=VARCHAR},
      features = #{features,jdbcType=VARCHAR},
      urls = #{urls,jdbcType=VARCHAR},
      tsql = #{tsql,jdbcType=VARCHAR},
      users = #{users,jdbcType=VARCHAR},
      is_finished = #{isFinished,jdbcType=BIT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      extra = #{extra,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <insert id="insertTsqlInfo" parameterType="java.lang.String" >
    INSERT INTO crawl_data (users, entity, theme, features, urls, tsql)
    VALUES (#{users, jdbcType=VARCHAR}, #{entity, jdbcType=VARCHAR},
        #{theme, jdbcType=VARCHAR}, #{features, jdbcType=VARCHAR},
        #{urls, jdbcType=VARCHAR}, #{tsql, jdbcType=VARCHAR}
        )
  </insert>
</mapper>