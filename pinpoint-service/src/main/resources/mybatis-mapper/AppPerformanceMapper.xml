<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="indiv.dev.grad.hit.pro.mapper.AppPerformanceMapper" >
  <resultMap id="BaseResultMap" type="indiv.dev.grad.hit.pro.pojo.AppPerformance" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="job" property="job" jdbcType="VARCHAR" />
    <result column="object" property="object" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="extra" property="extra" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, job, object, update_time, extra
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="indiv.dev.grad.hit.pro.example.AppPerformanceExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from app_performance
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from app_performance
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from app_performance
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="indiv.dev.grad.hit.pro.example.AppPerformanceExample" >
    delete from app_performance
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="indiv.dev.grad.hit.pro.pojo.AppPerformance" >
    insert into app_performance (id, job, object, 
      update_time, extra)
    values (#{id,jdbcType=INTEGER}, #{job,jdbcType=VARCHAR}, #{object,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{extra,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="indiv.dev.grad.hit.pro.pojo.AppPerformance" >
    insert into app_performance
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="job != null" >
        job,
      </if>
      <if test="object != null" >
        object,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="extra != null" >
        extra,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="job != null" >
        #{job,jdbcType=VARCHAR},
      </if>
      <if test="object != null" >
        #{object,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="extra != null" >
        #{extra,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="indiv.dev.grad.hit.pro.example.AppPerformanceExample" resultType="java.lang.Integer" >
    select count(*) from app_performance
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update app_performance
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.job != null" >
        job = #{record.job,jdbcType=VARCHAR},
      </if>
      <if test="record.object != null" >
        object = #{record.object,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.extra != null" >
        extra = #{record.extra,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update app_performance
    set id = #{record.id,jdbcType=INTEGER},
      job = #{record.job,jdbcType=VARCHAR},
      object = #{record.object,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      extra = #{record.extra,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="indiv.dev.grad.hit.pro.pojo.AppPerformance" >
    update app_performance
    <set >
      <if test="job != null" >
        job = #{job,jdbcType=VARCHAR},
      </if>
      <if test="object != null" >
        object = #{object,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="extra != null" >
        extra = #{extra,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="indiv.dev.grad.hit.pro.pojo.AppPerformance" >
    update app_performance
    set job = #{job,jdbcType=VARCHAR},
      object = #{object,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      extra = #{extra,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <insert id="insertByJobAndObj" parameterType="java.lang.String">
     INSERT INTO app_performance (job, object)
    VALUES (#{job,jdbcType=VARCHAR}, #{object,jdbcType=VARCHAR})
  </insert>
    <select id="selectSeqByJob" parameterType="java.lang.String" resultType="indiv.dev.grad.hit.pro.pojo.AppPerformance">
        SELECT object FROM app_performance WHERE job = #{jobName, jdbcType=VARCHAR} ORDER BY update_time ASC
    </select>
    <select id="selectLatestSevenSeq" resultType="indiv.dev.grad.hit.pro.pojo.AppPerformance">
        SELECT object FROM app_performance ORDER BY update_time DESC LIMIT 7
    </select>
    <select id="selectLatestSeqByJob" parameterType="java.lang.String" resultType="indiv.dev.grad.hit.pro.pojo.AppPerformance">
        SELECT object FROM app_performance WHERE job = #{jobName, jdbcType=VARCHAR} ORDER BY update_time DESC LIMIT 7
    </select>
</mapper>