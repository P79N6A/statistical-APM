<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="indiv.dev.grad.hit.pro.mapper.UsersMapper">
  <resultMap id="BaseResultMap" type="indiv.dev.grad.hit.pro.pojo.Users">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="full_name" jdbcType="VARCHAR" property="fullName" />
    <result column="email_address" jdbcType="VARCHAR" property="emailAddress" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="password_md5" jdbcType="VARCHAR" property="passwordMd5" />
    <result column="users_level" jdbcType="TINYINT" property="usersLevel" />
    <result column="is_forbidden" jdbcType="BIT" property="isForbidden" />
    <result column="user_desc" jdbcType="VARCHAR" property="userDesc" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, full_name, email_address, password, password_md5, users_level, is_forbidden, 
    user_desc
  </sql>
  <select id="selectByExample" parameterType="indiv.dev.grad.hit.pro.example.UsersExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from users
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from users
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="indiv.dev.grad.hit.pro.example.UsersExample">
    delete from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="indiv.dev.grad.hit.pro.pojo.Users">
    insert into users (id, full_name, email_address, 
      password, password_md5, users_level, 
      is_forbidden, user_desc)
    values (#{id,jdbcType=INTEGER}, #{fullName,jdbcType=VARCHAR}, #{emailAddress,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{passwordMd5,jdbcType=VARCHAR}, #{usersLevel,jdbcType=TINYINT}, 
      #{isForbidden,jdbcType=BIT}, #{userDesc,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="indiv.dev.grad.hit.pro.pojo.Users">
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="fullName != null">
        full_name,
      </if>
      <if test="emailAddress != null">
        email_address,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="passwordMd5 != null">
        password_md5,
      </if>
      <if test="usersLevel != null">
        users_level,
      </if>
      <if test="isForbidden != null">
        is_forbidden,
      </if>
      <if test="userDesc != null">
        user_desc,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="fullName != null">
        #{fullName,jdbcType=VARCHAR},
      </if>
      <if test="emailAddress != null">
        #{emailAddress,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="passwordMd5 != null">
        #{passwordMd5,jdbcType=VARCHAR},
      </if>
      <if test="usersLevel != null">
        #{usersLevel,jdbcType=TINYINT},
      </if>
      <if test="isForbidden != null">
        #{isForbidden,jdbcType=BIT},
      </if>
      <if test="userDesc != null">
        #{userDesc,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="indiv.dev.grad.hit.pro.example.UsersExample" resultType="java.lang.Integer">
    select count(*) from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update users
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.fullName != null">
        full_name = #{record.fullName,jdbcType=VARCHAR},
      </if>
      <if test="record.emailAddress != null">
        email_address = #{record.emailAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.passwordMd5 != null">
        password_md5 = #{record.passwordMd5,jdbcType=VARCHAR},
      </if>
      <if test="record.usersLevel != null">
        users_level = #{record.usersLevel,jdbcType=TINYINT},
      </if>
      <if test="record.isForbidden != null">
        is_forbidden = #{record.isForbidden,jdbcType=BIT},
      </if>
      <if test="record.userDesc != null">
        user_desc = #{record.userDesc,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update users
    set id = #{record.id,jdbcType=INTEGER},
      full_name = #{record.fullName,jdbcType=VARCHAR},
      email_address = #{record.emailAddress,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      password_md5 = #{record.passwordMd5,jdbcType=VARCHAR},
      users_level = #{record.usersLevel,jdbcType=TINYINT},
      is_forbidden = #{record.isForbidden,jdbcType=BIT},
      user_desc = #{record.userDesc,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="indiv.dev.grad.hit.pro.pojo.Users">
    update users
    <set>
      <if test="fullName != null">
        full_name = #{fullName,jdbcType=VARCHAR},
      </if>
      <if test="emailAddress != null">
        email_address = #{emailAddress,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="passwordMd5 != null">
        password_md5 = #{passwordMd5,jdbcType=VARCHAR},
      </if>
      <if test="usersLevel != null">
        users_level = #{usersLevel,jdbcType=TINYINT},
      </if>
      <if test="isForbidden != null">
        is_forbidden = #{isForbidden,jdbcType=BIT},
      </if>
      <if test="userDesc != null">
        user_desc = #{userDesc,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="indiv.dev.grad.hit.pro.pojo.Users">
    update users
    set full_name = #{fullName,jdbcType=VARCHAR},
      email_address = #{emailAddress,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      password_md5 = #{passwordMd5,jdbcType=VARCHAR},
      users_level = #{usersLevel,jdbcType=TINYINT},
      is_forbidden = #{isForbidden,jdbcType=BIT},
      user_desc = #{userDesc,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="indiv.dev.grad.hit.pro.pojo.Users">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="full_name" jdbcType="VARCHAR" property="fullName" />
    <result column="email_address" jdbcType="VARCHAR" property="emailAddress" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="password_md5" jdbcType="VARCHAR" property="passwordMd5" />
    <result column="users_level" jdbcType="TINYINT" property="usersLevel" />
    <result column="is_forbidden" jdbcType="BIT" property="isForbidden" />
    <result column="user_desc" jdbcType="VARCHAR" property="userDesc" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, full_name, email_address, password, password_md5, users_level, is_forbidden, 
    user_desc
  </sql>
  <select id="selectByExample" parameterType="indiv.dev.grad.hit.pro.example.UsersExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from users
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from users
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="indiv.dev.grad.hit.pro.example.UsersExample">
    delete from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="indiv.dev.grad.hit.pro.pojo.Users">
    insert into users (id, full_name, email_address, 
      password, password_md5, users_level, 
      is_forbidden, user_desc)
    values (#{id,jdbcType=INTEGER}, #{fullName,jdbcType=VARCHAR}, #{emailAddress,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{passwordMd5,jdbcType=VARCHAR}, #{usersLevel,jdbcType=TINYINT}, 
      #{isForbidden,jdbcType=BIT}, #{userDesc,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="indiv.dev.grad.hit.pro.pojo.Users">
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="fullName != null">
        full_name,
      </if>
      <if test="emailAddress != null">
        email_address,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="passwordMd5 != null">
        password_md5,
      </if>
      <if test="usersLevel != null">
        users_level,
      </if>
      <if test="isForbidden != null">
        is_forbidden,
      </if>
      <if test="userDesc != null">
        user_desc,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="fullName != null">
        #{fullName,jdbcType=VARCHAR},
      </if>
      <if test="emailAddress != null">
        #{emailAddress,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="passwordMd5 != null">
        #{passwordMd5,jdbcType=VARCHAR},
      </if>
      <if test="usersLevel != null">
        #{usersLevel,jdbcType=TINYINT},
      </if>
      <if test="isForbidden != null">
        #{isForbidden,jdbcType=BIT},
      </if>
      <if test="userDesc != null">
        #{userDesc,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="indiv.dev.grad.hit.pro.example.UsersExample" resultType="java.lang.Integer">
    select count(*) from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update users
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.fullName != null">
        full_name = #{record.fullName,jdbcType=VARCHAR},
      </if>
      <if test="record.emailAddress != null">
        email_address = #{record.emailAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.passwordMd5 != null">
        password_md5 = #{record.passwordMd5,jdbcType=VARCHAR},
      </if>
      <if test="record.usersLevel != null">
        users_level = #{record.usersLevel,jdbcType=TINYINT},
      </if>
      <if test="record.isForbidden != null">
        is_forbidden = #{record.isForbidden,jdbcType=BIT},
      </if>
      <if test="record.userDesc != null">
        user_desc = #{record.userDesc,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update users
    set id = #{record.id,jdbcType=INTEGER},
      full_name = #{record.fullName,jdbcType=VARCHAR},
      email_address = #{record.emailAddress,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      password_md5 = #{record.passwordMd5,jdbcType=VARCHAR},
      users_level = #{record.usersLevel,jdbcType=TINYINT},
      is_forbidden = #{record.isForbidden,jdbcType=BIT},
      user_desc = #{record.userDesc,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="indiv.dev.grad.hit.pro.pojo.Users">
    update users
    <set>
      <if test="fullName != null">
        full_name = #{fullName,jdbcType=VARCHAR},
      </if>
      <if test="emailAddress != null">
        email_address = #{emailAddress,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="passwordMd5 != null">
        password_md5 = #{passwordMd5,jdbcType=VARCHAR},
      </if>
      <if test="usersLevel != null">
        users_level = #{usersLevel,jdbcType=TINYINT},
      </if>
      <if test="isForbidden != null">
        is_forbidden = #{isForbidden,jdbcType=BIT},
      </if>
      <if test="userDesc != null">
        user_desc = #{userDesc,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="indiv.dev.grad.hit.pro.pojo.Users">
    update users
    set full_name = #{fullName,jdbcType=VARCHAR},
      email_address = #{emailAddress,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      password_md5 = #{passwordMd5,jdbcType=VARCHAR},
      users_level = #{usersLevel,jdbcType=TINYINT},
      is_forbidden = #{isForbidden,jdbcType=BIT},
      user_desc = #{userDesc,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>